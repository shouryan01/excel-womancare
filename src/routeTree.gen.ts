/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ServicesObstetricsImport } from './routes/services.obstetrics'
import { Route as ServicesGynecologyImport } from './routes/services.gynecology'

// Create/Update Routes

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesObstetricsRoute = ServicesObstetricsImport.update({
  id: '/services/obstetrics',
  path: '/services/obstetrics',
  getParentRoute: () => rootRoute,
} as any)

const ServicesGynecologyRoute = ServicesGynecologyImport.update({
  id: '/services/gynecology',
  path: '/services/gynecology',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/services/gynecology': {
      id: '/services/gynecology'
      path: '/services/gynecology'
      fullPath: '/services/gynecology'
      preLoaderRoute: typeof ServicesGynecologyImport
      parentRoute: typeof rootRoute
    }
    '/services/obstetrics': {
      id: '/services/obstetrics'
      path: '/services/obstetrics'
      fullPath: '/services/obstetrics'
      preLoaderRoute: typeof ServicesObstetricsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/services/gynecology': typeof ServicesGynecologyRoute
  '/services/obstetrics': typeof ServicesObstetricsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/services/gynecology': typeof ServicesGynecologyRoute
  '/services/obstetrics': typeof ServicesObstetricsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/services/gynecology': typeof ServicesGynecologyRoute
  '/services/obstetrics': typeof ServicesObstetricsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/services/gynecology'
    | '/services/obstetrics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/services/gynecology'
    | '/services/obstetrics'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/services/gynecology'
    | '/services/obstetrics'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  ServicesGynecologyRoute: typeof ServicesGynecologyRoute
  ServicesObstetricsRoute: typeof ServicesObstetricsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  ServicesGynecologyRoute: ServicesGynecologyRoute,
  ServicesObstetricsRoute: ServicesObstetricsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/services/gynecology",
        "/services/obstetrics"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/services/gynecology": {
      "filePath": "services.gynecology.tsx"
    },
    "/services/obstetrics": {
      "filePath": "services.obstetrics.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
